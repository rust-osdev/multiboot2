name: Build

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

env:
  CARGO_TERM_COLOR: always

jobs:
  build:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        rust:
          - stable
          - nightly
          - 1.56.1 # MSVR
    steps:
      - uses: actions/checkout@v3
      # Important preparation step: override the latest default Rust version in GitHub CI
      # with the current value of the iteration in the "strategy.matrix.rust"-array.
      - uses: actions-rs/toolchain@v1
        with:
          profile: default
          toolchain: ${{ matrix.rust }}
          override: true
      # helps to identify if the right cargo version is actually used
      - run: cargo version
      - name: Build
        run: cargo build --verbose
      - name: Run tests
        run: cargo test --verbose

  build_no_std:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        rust:
          - stable
          - nightly
          - 1.56.1 # MSVR
    steps:
      - uses: actions/checkout@v3
      # Important preparation step: override the latest default Rust version in GitHub CI
      # with the current value of the iteration in the "strategy.matrix.rust"-array.
      - uses: actions-rs/toolchain@v1
        with:
          profile: default
          toolchain: ${{ matrix.rust }}
          override: true
      # helps to identify if the right cargo version is actually used
      - run: cargo version
      - name: "Rustup: install some no_std target"
        run: rustup target add thumbv7em-none-eabihf
      - name: Build (no_std)
        run: cargo build --target thumbv7em-none-eabihf


  # As discussed, these tasks are optional for PRs.
  style_checks:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        rust:
          - 1.56.1 # MSVR
    steps:
      - uses: actions/checkout@v3
      # Important preparation step: override the latest default Rust version in GitHub CI
      # with the current value of the iteration in the "strategy.matrix.rust"-array.
      - uses: actions-rs/toolchain@v1
        with:
          profile: default
          toolchain: ${{ matrix.rust }}
          override: true
      # helps to identify if the right cargo version is actually used
      - run: cargo version
      - name: Rustfmt
        run: cargo fmt -- --check
      - name: Clippy
        run: cargo clippy
      - name: Rustdoc
        run: cargo doc
